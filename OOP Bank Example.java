// Abstraction: BankAccount ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø abstract ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡¶≤‡ßã
abstract class BankAccount {
    // Encapsulation: accountNumber ‡¶ì balance ‡¶´‡¶ø‡¶≤‡ßç‡¶°‡¶ó‡ßÅ‡¶≤‡ßã private ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡¶≤‡ßã
    private String accountNumber;
    private double balance;

    // Default Constructor: ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶æ ‡¶ú‡¶æ‡¶®‡¶≤‡ßá ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶Æ‡¶æ‡¶® ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá
    public BankAccount() {
        this("N/A", 0.0); // constructor chaining
    }

    // Parameterized Constructor: ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
    public BankAccount(String accountNumber, double balance) {
        setAccountNumber(accountNumber);
        deposit(balance); // ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ú‡¶Æ‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶Ø‡¶æ‡ßü
    }

    // Getter & Setter
    public String getAccountNumber() {
        return accountNumber;
    }

    public void setAccountNumber(String accountNumber) {
        if (!accountNumber.isEmpty()) {
            this.accountNumber = accountNumber;
        }
    }

    public double getBalance() {
        return balance;
    }

    // Deposit Method: ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã ‡¶π‡ßü
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
        }
    }

    // Withdraw Method: ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶§‡ßã‡¶≤‡¶æ ‡¶Ø‡¶æ‡ßü, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
        } else {
            System.out.println("‚ùå ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶®‡ßá‡¶á!");
        }
    }

    // Abstract Methods: child class ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶á method ‡¶ó‡ßÅ‡¶≤‡ßã override ‡¶ï‡¶∞‡¶¨‡ßá
    public abstract void accountType();
    public abstract void showDetails();
}

// Inheritance: SavingsAccount -> BankAccount
class SavingsAccount extends BankAccount {
    private double interestRate;

    // Default Constructor
    public SavingsAccount() {
        this("SA000", 0.0, 0.0);
    }

    // Constructor: ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶•‡¶æ‡¶ï‡ßá
    public SavingsAccount(String accNumber, double balance, double interestRate) {
        super(accNumber, balance);
        this.interestRate = interestRate;
    }

    @Override
    public void accountType() {
        System.out.println("üè¶ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü (Savings Account)");
    }

    @Override
    public void showDetails() {
        System.out.println("üî¢ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: " + getAccountNumber());
        System.out.println("üí∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: " + getBalance() + " ‡¶ü‡¶æ‡¶ï‡¶æ");
        System.out.println("üìà ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶ü: " + interestRate + "%");
    }

    // ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü
    public void addInterest() {
        double interest = getBalance() * interestRate / 100;
        deposit(interest);
        System.out.println("üíπ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã: " + interest + " ‡¶ü‡¶æ‡¶ï‡¶æ");
    }
}

// Inheritance: CurrentAccount -> BankAccount
class CurrentAccount extends BankAccount {
    private double overdraftLimit;

    // Default Constructor
    public CurrentAccount() {
        this("CA000", 0.0, 0.0);
    }

    // Constructor: ‡¶ï‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
    public CurrentAccount(String accNumber, double balance, double overdraftLimit) {
        super(accNumber, balance);
        this.overdraftLimit = overdraftLimit;
    }

    @Override
    public void accountType() {
        System.out.println("üè¶ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü (Current Account)");
    }

    @Override
    public void showDetails() {
        System.out.println("üî¢ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: " + getAccountNumber());
        System.out.println("üí∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: " + getBalance() + " ‡¶ü‡¶æ‡¶ï‡¶æ");
        System.out.println("üìâ ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶∏‡ßÄ‡¶Æ‡¶æ: " + overdraftLimit + " ‡¶ü‡¶æ‡¶ï‡¶æ");
    }

    // ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶≤‡¶ø‡¶Æ‡¶ø‡¶ü ‡¶∏‡¶π ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶§‡ßã‡¶≤‡¶æ ‡¶Ø‡¶æ‡ßü
    @Override
    public void withdraw(double amount) {
        if (amount <= getBalance() + overdraftLimit) {
            super.withdraw(amount);
        } else {
            System.out.println("‚ùå ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶∏‡ßÄ‡¶Æ‡¶æ ‡¶Ö‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá ‡¶®‡¶æ!");
        }
    }
}

// Interface: ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï‡ßá‡¶∞ ‡¶Ö‡¶°‡¶ø‡¶ü‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶∞‡¶æ Maintainable ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶∞‡¶£ ‡¶ï‡¶∞‡ßá
interface Maintainable {
    void auditReport();
}

// BankEmployee: ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá
class BankEmployee implements Maintainable {
    private String name;

    // Default Constructor
    public BankEmployee() {
        this("‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ");
    }

    // Constructor: ‡¶®‡¶æ‡¶Æ‡¶∏‡¶π ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ ‡¶§‡ßà‡¶∞‡¶ø
    public BankEmployee(String name) {
        this.name = name;
    }

    @Override
    public void auditReport() {
        System.out.println("üìã ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ " + name + " ‡¶è‡¶∞ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡•§");
    }
}

// Main class: ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶ö‡¶æ‡¶≤‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø entry point
public class Main {
    public static void main(String[] args) {
        // üîπ ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
        SavingsAccount savings = new SavingsAccount("SA123", 5000, 5);
        savings.accountType();
        savings.showDetails();
        savings.addInterest(); // ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá

        System.out.println();

        // üîπ ‡¶ï‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
        CurrentAccount current = new CurrentAccount("CA456", 3000, 1000);
        current.accountType();
        current.showDetails();
        current.withdraw(3500); // ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶§‡ßã‡¶≤‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá

        System.out.println();

        // üîπ ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø (‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)
        SavingsAccount defaultSaving = new SavingsAccount();
        defaultSaving.accountType();
        defaultSaving.showDetails();

        System.out.println();

        // üîπ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶Ç‡¶ï ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶õ‡ßá
        BankEmployee emp = new BankEmployee("‡¶∞‡¶π‡¶ø‡¶Æ");
        emp.auditReport();

        // üîπ ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ
        BankEmployee emp2 = new BankEmployee();
        emp2.auditReport();
    }
}



// ‚úÖ ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü:
/*
üè¶ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü (Savings Account)
üî¢ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: SA123
üí∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: 5000.0 ‡¶ü‡¶æ‡¶ï‡¶æ
üìà ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶ü: 5.0%
üíπ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶≤‡ßã: 250.0 ‡¶ü‡¶æ‡¶ï‡¶æ

üè¶ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü (Current Account)
üî¢ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: CA456
üí∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: 3000.0 ‡¶ü‡¶æ‡¶ï‡¶æ
üìâ ‡¶ì‡¶≠‡¶æ‡¶∞‡¶°‡ßç‡¶∞‡¶æ‡¶´‡¶ü ‡¶∏‡ßÄ‡¶Æ‡¶æ: 1000.0 ‡¶ü‡¶æ‡¶ï‡¶æ
‚ùå ‡¶™‡¶∞‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶§ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶®‡ßá‡¶á!

üè¶ ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßá‡¶≠‡¶ø‡¶Ç‡¶∏ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü (Savings Account)
üî¢ ‡¶è‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞: SA000
üí∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶∏: 0.0 ‡¶ü‡¶æ‡¶ï‡¶æ
üìà ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶ü: 0.0%

üìã ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ ‡¶∞‡¶π‡¶ø‡¶Æ ‡¶è‡¶∞ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡•§
üìã ‡¶ï‡¶∞‡ßç‡¶Æ‡ßÄ ‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶è‡¶∞ ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶Ö‡¶°‡¶ø‡¶ü ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡•§
*/



